<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.kotlin.compose)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.mentalhealthapp&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.mentalhealthapp&quot;&#10;        minSdk = 21&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Traditional Android View dependencies&#10;    implementation(&quot;androidx.appcompat:appcompat:1.6.1&quot;)&#10;    implementation(&quot;androidx.constraintlayout:constraintlayout:2.2.1&quot;)&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;&#10;    // Compose dependencies (keeping existing)&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.compose)&#10;    implementation(platform(libs.androidx.compose.bom))&#10;    implementation(libs.androidx.ui)&#10;    implementation(libs.androidx.ui.graphics)&#10;    implementation(libs.androidx.ui.tooling.preview)&#10;    implementation(libs.androidx.material3)&#10;&#10;    // Test dependencies&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;    androidTestImplementation(platform(libs.androidx.compose.bom))&#10;    androidTestImplementation(libs.androidx.ui.test.junit4)&#10;    debugImplementation(libs.androidx.ui.tooling)&#10;    debugImplementation(libs.androidx.ui.test.manifest)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.kotlin.compose)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.mentalhealthapp&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.mentalhealthapp&quot;&#10;        minSdk = 21&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    // Traditional Android View dependencies&#10;    implementation(&quot;androidx.appcompat:appcompat:1.6.1&quot;)&#10;    implementation(&quot;androidx.constraintlayout:constraintlayout:2.2.1&quot;)&#10;    implementation(&quot;com.google.android.material:material:1.11.0&quot;)&#10;&#10;    // Compose dependencies (keeping existing)&#10;    implementation(libs.androidx.core.ktx)&#10;    implementation(libs.androidx.lifecycle.runtime.ktx)&#10;    implementation(libs.androidx.activity.compose)&#10;    implementation(platform(libs.androidx.compose.bom))&#10;    implementation(libs.androidx.ui)&#10;    implementation(libs.androidx.ui.graphics)&#10;    implementation(libs.androidx.ui.tooling.preview)&#10;    implementation(libs.androidx.material3)&#10;&#10;    // Navigation Compose&#10;    implementation(&quot;androidx.navigation:navigation-compose:2.7.5&quot;)&#10;&#10;    // Test dependencies&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.androidx.junit)&#10;    androidTestImplementation(libs.androidx.espresso.core)&#10;    androidTestImplementation(platform(libs.androidx.compose.bom))&#10;    androidTestImplementation(libs.androidx.ui.test.junit4)&#10;    debugImplementation(libs.androidx.ui.tooling)&#10;    debugImplementation(libs.androidx.ui.test.manifest)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/mentalhealthapp/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/mentalhealthapp/MainActivity.kt" />
              <option name="originalContent" value="package com.example.mentalhealthapp&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Person&#10;import androidx.compose.material.icons.filled.DateRange&#10;import androidx.compose.material.icons.filled.Info&#10;import androidx.compose.material3.*&#10;import androidx.compose.runtime.*&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.vector.ImageVector&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;import androidx.navigation.NavDestination.Companion.hierarchy&#10;import androidx.navigation.NavGraph.Companion.findStartDestination&#10;import androidx.navigation.compose.NavHost&#10;import androidx.navigation.compose.composable&#10;import androidx.navigation.compose.currentBackStackEntryAsState&#10;import androidx.navigation.compose.rememberNavController&#10;import com.example.mentalhealthapp.ui.theme.MentalHealthAppTheme&#10;&#10;sealed class BottomNavItem(&#10;    val route: String,&#10;    val title: String,&#10;    val icon: ImageVector&#10;) {&#10;    object Tracker : BottomNavItem(&quot;tracker&quot;, &quot;Tracker&quot;, Icons.Filled.DateRange)&#10;    object Resources : BottomNavItem(&quot;resources&quot;, &quot;Resources&quot;, Icons.Filled.Info)&#10;    object Profile : BottomNavItem(&quot;profile&quot;, &quot;Profile&quot;, Icons.Filled.Person)&#10;}&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            MentalHealthAppTheme {&#10;                MainScreen()&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun MainScreen() {&#10;    val navController = rememberNavController()&#10;    val items = listOf(&#10;        BottomNavItem.Tracker,&#10;        BottomNavItem.Resources,&#10;        BottomNavItem.Profile&#10;    )&#10;&#10;    Scaffold(&#10;        bottomBar = {&#10;            NavigationBar {&#10;                val navBackStackEntry by navController.currentBackStackEntryAsState()&#10;                val currentDestination = navBackStackEntry?.destination&#10;&#10;                items.forEach { item -&gt;&#10;                    NavigationBarItem(&#10;                        icon = { Icon(item.icon, contentDescription = item.title) },&#10;                        label = { Text(item.title) },&#10;                        selected = currentDestination?.hierarchy?.any { it.route == item.route } == true,&#10;                        onClick = {&#10;                            navController.navigate(item.route) {&#10;                                popUpTo(navController.graph.findStartDestination().id) {&#10;                                    saveState = true&#10;                                }&#10;                                launchSingleTop = true&#10;                                restoreState = true&#10;                            }&#10;                        }&#10;                    )&#10;                }&#10;            }&#10;        }&#10;    ) { innerPadding -&gt;&#10;        NavHost(&#10;            navController = navController,&#10;            startDestination = BottomNavItem.Tracker.route,&#10;            modifier = Modifier.padding(innerPadding)&#10;        ) {&#10;            composable(BottomNavItem.Tracker.route) {&#10;                TrackerScreen()&#10;            }&#10;            composable(BottomNavItem.Resources.route) {&#10;                ResourcesScreen()&#10;            }&#10;            composable(BottomNavItem.Profile.route) {&#10;                ProfileScreen()&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun TrackerScreen() {&#10;    Column(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .padding(16.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally,&#10;        verticalArrangement = Arrangement.Center&#10;    ) {&#10;        Text(&#10;            text = &quot;Mood Tracker&quot;,&#10;            fontSize = 24.sp,&#10;            fontWeight = FontWeight.Bold&#10;        )&#10;        Spacer(modifier = Modifier.height(16.dp))&#10;        Text(&#10;            text = &quot;Track your daily mood and mental health progress here.&quot;,&#10;            fontSize = 16.sp&#10;        )&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ResourcesScreen() {&#10;    Column(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .padding(16.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally,&#10;        verticalArrangement = Arrangement.Center&#10;    ) {&#10;        Text(&#10;            text = &quot;Resources&quot;,&#10;            fontSize = 24.sp,&#10;            fontWeight = FontWeight.Bold&#10;        )&#10;        Spacer(modifier = Modifier.height(16.dp))&#10;        Text(&#10;            text = &quot;Find helpful mental health resources and articles here.&quot;,&#10;            fontSize = 16.sp&#10;        )&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ProfileScreen() {&#10;    Column(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .padding(16.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally,&#10;        verticalArrangement = Arrangement.Center&#10;    ) {&#10;        Text(&#10;            text = &quot;Profile&quot;,&#10;            fontSize = 24.sp,&#10;            fontWeight = FontWeight.Bold&#10;        )&#10;        Spacer(modifier = Modifier.height(16.dp))&#10;        Text(&#10;            text = &quot;Manage your profile and app settings here.&quot;,&#10;            fontSize = 16.sp&#10;        )&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mentalhealthapp&#10;&#10;import android.os.Bundle&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.fragment.app.Fragment&#10;import com.google.android.material.bottomnavigation.BottomNavigationView&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    private var isLoggedIn = false&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;&#10;        if (!isLoggedIn) {&#10;            // Show login/register screen&#10;            setContentView(R.layout.activity_main)&#10;            setupLoginScreen()&#10;        } else {&#10;            // Show tabbed interface&#10;            setContentView(R.layout.activity_main_tabs)&#10;            setupTabbedInterface()&#10;        }&#10;    }&#10;&#10;    private fun setupLoginScreen() {&#10;        val loginButton = findViewById&lt;android.widget.Button&gt;(R.id.buttonLogin)&#10;        val registerButton = findViewById&lt;android.widget.Button&gt;(R.id.buttonRegister)&#10;&#10;        loginButton.setOnClickListener {&#10;            // Simulate login success&#10;            isLoggedIn = true&#10;            // Switch to tabbed interface&#10;            setContentView(R.layout.activity_main_tabs)&#10;            setupTabbedInterface()&#10;        }&#10;&#10;        registerButton.setOnClickListener {&#10;            // Handle registration - for now just show login screen&#10;            // You can add registration logic here later&#10;        }&#10;    }&#10;&#10;    private fun setupTabbedInterface() {&#10;        val bottomNavigation = findViewById&lt;BottomNavigationView&gt;(R.id.bottom_navigation)&#10;&#10;        // Set default fragment&#10;        supportFragmentManager.beginTransaction()&#10;            .replace(R.id.fragment_container, TrackerFragment())&#10;            .commit()&#10;&#10;        bottomNavigation.setOnItemSelectedListener { item -&gt;&#10;            val fragment: Fragment = when (item.itemId) {&#10;                R.id.nav_tracker -&gt; TrackerFragment()&#10;                R.id.nav_resources -&gt; ResourcesFragment()&#10;                R.id.nav_profile -&gt; ProfileFragment()&#10;                else -&gt; TrackerFragment()&#10;            }&#10;&#10;            supportFragmentManager.beginTransaction()&#10;                .replace(R.id.fragment_container, fragment)&#10;                .commit()&#10;&#10;            true&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/mentalhealthapp/TabFragments.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/mentalhealthapp/TabFragments.kt" />
              <option name="updatedContent" value="package com.example.mentalhealthapp&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.fragment.app.Fragment&#10;&#10;class TrackerFragment : Fragment() {&#10;    &#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, &#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_tracker, container, false)&#10;    }&#10;}&#10;&#10;class ResourcesFragment : Fragment() {&#10;    &#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, &#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_resources, container, false)&#10;    }&#10;}&#10;&#10;class ProfileFragment : Fragment() {&#10;    &#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, &#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_profile, container, false)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main_tabs.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main_tabs.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;    &lt;!-- Fragment Container --&gt;&#10;    &lt;FrameLayout&#10;        android:id=&quot;@+id/fragment_container&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@id/bottom_navigation&quot; /&gt;&#10;&#10;    &lt;!-- Bottom Navigation --&gt;&#10;    &lt;com.google.android.material.bottomnavigation.BottomNavigationView&#10;        android:id=&quot;@+id/bottom_navigation&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;?android:attr/windowBackground&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:menu=&quot;@menu/bottom_nav_menu&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res/auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/profile_title&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Profile&quot;&#10;        android:textSize=&quot;24sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;100dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/profile_description&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Manage your profile and app settings here.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:gravity=&quot;center&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/profile_title&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_resources.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_resources.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res/auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/resources_title&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Resources&quot;&#10;        android:textSize=&quot;24sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;100dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/resources_description&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Find helpful mental health resources and articles here.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:gravity=&quot;center&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/resources_title&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_tracker.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_tracker.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tracker_title&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Mood Tracker&quot;&#10;        android:textSize=&quot;24sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_centerInParent=&quot;true&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;100dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tracker_description&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Track your daily mood and mental health progress here.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:gravity=&quot;center&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/tracker_title&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_tracker&quot;&#10;        android:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;        android:title=&quot;Tracker&quot; /&gt;&#10;    &#10;    &lt;item&#10;        android:id=&quot;@+id/nav_resources&quot;&#10;        android:icon=&quot;@android:drawable/ic_menu_info_details&quot;&#10;        android:title=&quot;Resources&quot; /&gt;&#10;    &#10;    &lt;item&#10;        android:id=&quot;@+id/nav_profile&quot;&#10;        android:icon=&quot;@android:drawable/ic_menu_myplaces&quot;&#10;        android:title=&quot;Profile&quot; /&gt;&#10;&lt;/menu&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>